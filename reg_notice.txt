一、支持正则表达式的String对象的方法

search(regexp);
这个就只有一个参数,可以是检索的字符串，也可以是正则表达式
返回的值是匹配的开始位置，从0开始number

match()
param：
需要检索的字符串或者正则
返回匹配成功的数组；全局匹配是一个数据，
不全局就是三个元素，第一个是匹配的文本，第二个是开始位置，第三个是整个字符串

replace()
param：
1.字符串或者正则对象
2.replacement被替换的文本或者生成文本的函数
返回新替换后的字符串

split()
param:
1.字符串或者正则
2.number制定返回的数组的最大长度
返回被分割后的数组

二、RegExp对象方法

test()
param:
这里是需要检测的字符串
return:
匹配到的话就是true,否则返回false

exec()
param:
需要检测的字符串
return：
如果找不到就返回null，找到了就和match()方法返回的是一样的三个参数

三、方括号的含义

[abc]：查找方括号里任意一个字符；
[^abc]：查找不在方括号里的一个字符；

四、元字符的含义

.   查找任意的单个字符，换行符除外
\w	任意一个字母或数字或下划线，A_Za_Z0_9,_中的一个
\W  查找非单词的字符，等价于[^A_Za_Z0_9,_]
\d  匹配数字
\D  匹配非数字
\s  匹配任何空白字符，包括空格，制表符，换行符
\S  匹配任何非空白字符
\b  匹配一个单词边界，也就是指单词和空格间的位置
\B  匹配非单词边界
\0  查找NUL字符
\n  匹配一个换行符
\f  匹配一个换页符
\r  匹配一个回车符
\t  匹配一个制表符
\v  匹配一个垂直制表符
\xxx	查找一个以八进制数xxx规定的字符
\xdd	查找以16进制数dd规定的字符
\uxxxx	查找以16进制数的xxxx规定的Unicode字符

五、特殊字符中需要的转义字符

需要转移的特殊字符前面要加\
^ 匹配输入字符串的开始位置
* 匹配前面的子表达式的零次或者多次
+ 匹配子表达式的1次或者多次
. 匹配除换行符之外的任何一个字符
? 匹配前面的子表达式的零次或者1次
n{x,y} 匹配至少x，最多y个n字符串
()允许重复多个字符进行匹配

n$会匹配任何以n结尾的字符串（是整串字符串进行匹配）
^n会匹配任何以n开头的字符串（整串字符串）
(?=n)会匹配任何其后紧跟字符串n的字符串
(?!n)匹配任何其后不紧跟n的字符串
| 左右两边表达式之间‘或’关系，匹配左边或者右边

六、贪婪模式与非贪婪模式

贪婪模式量词：
{x,y} ,  {x,} ,  ? ,  * , 和  +
贪婪模式结尾的匹配在匹配成功的条件下会继续匹配

非贪婪模式量词
{x,y}?，{x,}?，??，*?，和 +?
非贪婪模式在匹配成功的条件下会开始新的条件匹配
